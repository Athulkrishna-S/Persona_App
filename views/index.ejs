<!DOCTYPE html>
<html lang="en" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Web Page</title>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@2.4.1/dist/flowbite.min.css" rel="stylesheet" />
    <style>
        .link-item {
            overflow-wrap: break-word; /* Wrap long links */
            word-wrap: break-word;     /* For older browsers */
            word-break: break-word;    /* For even older browsers */
        }
    </style>
</head>
<body class="dark:bg-gray-800 dark:text-white">
    
<nav class="bg-white border-gray-200 dark:bg-gray-900">
    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
        <a href="https://flowbite.com/" class="flex items-center space-x-3 rtl:space-x-reverse">
            <img src="https://flowbite.com/docs/images/logo.svg" class="h-8" alt="Flowbite Logo" />
            <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">Hi,<%= name %></span>
        </a>
        <button data-collapse-toggle="navbar-default" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-default" aria-expanded="false">
            <span class="sr-only">Open main menu</span>
            <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
            </svg>
        </button>
        <div class="hidden w-full md:block md:w-auto" id="navbar-default">
            <ul class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
                <li>
                    <a id="home-link" href="#" class="block py-2 px-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 dark:text-white md:dark:text-blue-500" aria-current="page">Home</a>
                </li>
                <li>
                    <a id="about-link" href="#" class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">About</a>
                </li>
                <li>
                    <a id="notes-link" href="#" class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Notes</a>
                </li>
            </ul>
        </div>
    </div>
</nav>
  
<div class="w-full max-w-sm mx-auto mt-6 px-4">
    <form id="add-topic-form">   
        <label for="search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
        <div class="relative">
            <input type="search" id="search" class="block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Add Topic" required />
            <button type="submit" class="text-white absolute end-2.5 top-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Ok</button>
        </div>
    </form>
    <% topics.forEach(topic => { %>
        <div class="w-full p-4 bg-white border border-gray-200 rounded-lg shadow sm:p-6 dark:bg-gray-800 dark:border-gray-700 mt-4">
            <h5 class="mb-3 text-base font-semibold text-gray-900 md:text-xl dark:text-white">
                <%= topic.topic %>
            </h5>
            <ul class="my-4 space-y-3">
                <% topic.links.forEach(link => { %>
                    <li class="link-item">
                        <a href="<%= link %>" target="_blank" class="flex items-center p-3 text-base font-bold text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 group hover:shadow dark:bg-gray-600 dark:hover:bg-gray-500 dark:text-white">
                            <span class="flex-1 ms-3 whitespace-nowrap overflow-hidden text-ellipsis"><%= link %></span>
                        </a>
                    </li>
                <% }); %>
                <li>
                    <form class="add-link-form">
                        <label for="link" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Add Link</label>
                        <div class="relative">
                            <input type="text" class="link-input block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Enter a link" required />
                            <button type="submit" class="text-white absolute end-2.5 top-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Add</button>
                            <input type="hidden" class="topic-input" value="<%= topic.topic %>">
                        </div>
                    </form>
                </li>
            </ul>
        </div>
    <% }); %>
</div>
<script src="https://cdn.jsdelivr.net/npm/flowbite@2.4.1/dist/flowbite.min.js"></script>
<script>
    window.addEventListener('pageshow', (event) => {
        const userId = localStorage.getItem('userid');
        if (userId) {
            document.getElementById('notes-link').addEventListener('click', navigateToNotes);
        }
    });

    function navigateToNotes(event) {
        event.preventDefault();
        const userId = localStorage.getItem('userid');
        if (userId) {
            window.location.href = `/usr/notes?userid=${userId}`;
        } else {
            alert('User ID not found in local storage');
        }
    }

    document.getElementById('add-topic-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const userId = localStorage.getItem('userid');
        const topic = document.getElementById('search').value;
        if (userId && topic) {
            const response = await fetch('/usr/addtopic', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ userid: userId, topic: topic })
            });
            const result = await response.json();
            if (result.message === 'Success') {
                window.location.reload();
            } else {
                alert('Failed to add topic');
            }
        } else {
            alert('User ID or topic is missing');
        }
    });

    document.querySelectorAll('.add-link-form').forEach(form => {
        form.addEventListener('submit', async (event) => {
            event.preventDefault();
            const userId = localStorage.getItem('userid');
            const linkInput = form.querySelector('.link-input');
            const topicInput = form.querySelector('.topic-input');
            const link = linkInput.value;
            const topic = topicInput.value;

            if (userId && link && topic) {
                const response = await fetch('/usr/addlink', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ userid: userId, topic: topic, link: link })
                });
                const result = await response.json();
                if (result.message === 'Success') {
                    window.location.reload();
                } else {
                    alert('Failed to add link');
                }
            } else {
                alert('User ID, topic, or link is missing');
            }
        });
    });
</script>
</body>
</html>
